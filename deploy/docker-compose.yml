services:
  cipo_backend_server:
    image: almasnurbayev/go_cipo_backend:latest
    #container_name: cipo_backend_server
    environment:
      - TZ=Asia/Almaty
      - ENV=${ENV}
      - TOKEN_TTL=${TOKEN_TTL}
      - HTTP_PORT=${HTTP_PORT}
      - HTTP_READ_TIMEOUT=${HTTP_READ_TIMEOUT}
      - HTTP_WRITE_TIMEOUT=${HTTP_WRITE_TIMEOUT}
      - HTTP_IDLE_TIMEOUT=${HTTP_IDLE_TIMEOUT}
      - HTTP_PREFORK=${HTTP_PREFORK}
      - GOMAXPROCS=${GOMAXPROCS}
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@cipo_backend_postgres:5432/${POSTGRES_DB}?sslmode=disable
      - PARSER_CLASSIFICATOR_FILE=${PARSER_CLASSIFICATOR_FILE}
      - PARSER_OFFER_FILE=${PARSER_OFFER_FILE}
      - PARSER_IMAGE_FOLDER=${PARSER_IMAGE_FOLDER}
      - PARSER_DEFAULT_USER_ID=${PARSER_DEFAULT_USER_ID}
      - PUID=1000
      - PGID=1000
    user: '1000:1000'
    ports:
      - ${HTTP_PORT}:${HTTP_PORT}
    volumes:
      - ./input:/app/input
      - ./assets:/app/assets
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${HTTP_PORT}/healthz']
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    depends_on:
      - cipo_backend_postgres
    networks:
      kofd:
        aliases:
          - cipo_backend_server.local
      cipo_backend_network:

  cipo_backend_postgres:
    image: postgres:17.3-alpine3.21
    #container_name: cipo_backend_postgres
    restart: always
    environment:
      - TZ='Asia/Qyzylorda'
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      # - '${HTTP_PORT}:${HTTP_PORT}'
      - '${POSTGRES_PORT}:5432'
    volumes:
      - ./pg_conf/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./volume_db/:/var/lib/postgresql/data
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]      
    networks:
      - cipo_backend_network

  cipo_next:
    image: node:22.14.0-alpine
    working_dir: /app
    depends_on:
      - cipo_backend_server
    command: sh -c "npm install && npm run build && npm run start"
    #command: sh -c "npm install && npm run dev"
    volumes:
      - ./cipo_next/:/app
    environment:
      - TZ='Asia/Qyzylorda'
      - backendUrl=${backendUrl}
      - NEXT_PUBLIC_backendUrl=${NEXT_PUBLIC_backendUrl}
      - frontUrl=${frontUrl}
      - NEXT_PUBLIC_frontUrl=${NEXT_PUBLIC_frontUrl}
    networks:
      - cipo_backend_network

  cipo_nginx:
    image: nginx:1.27.4
    depends_on:
      - cipo_next
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./assets/:/app/static
      - ./cipo_nginx/conf.d/:/etc/nginx/conf.d/:ro
    restart: always
    networks:
      - cipo_backend_network

networks:
  kofd:
    name: 'kofd'
    external: true
  cipo_backend_network:
    driver: bridge
